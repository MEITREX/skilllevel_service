extend type Query {
  """
  Get the skill levels of the current user for all skill types for a list of chapter ids.
  ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
  any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
  """
  _internal_noauth_userSkillLevelsByChapterIds(chapterIds: [UUID!]!): [SkillLevels!]!@deprecated(reason: "Old query, will be replaced.")
  """
  Get the skill levels of the specified user for all skill types for a list of chapter ids.
  ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
  any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
  """
  _internal_noauth_skillLevelsForUserByChapterIds(chapterIds: [UUID!]!, userId: UUID!): [SkillLevels!]!@deprecated(reason: "Old query, will be replaced.")
  """
  Get for current user the users current compentencies for the given the course, including for each compentency the covered Bloom Level.
  ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
  any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
  """
  _internal_noauth_userSkillLevelsByCourseId(courseId: UUID!): [SkillLevels!]!
  """
  Get for the specific user the user' current compentencies for the given course, including for each compentency the covered Bloom Level .
  ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
  any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
  """
  _internal_noauth_skillLevelsForUserByCourseIds(courseId: UUID!,userId:UUID!): [SkillLevels!]!
  """
  Get for the current student the students' current knowledge of the given compentencies, including all covered Levels of Blooms Taxonomy .
  ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
  any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
  """
  _internal_noauth_usersSkillLevelBySkillIds(skillIds: [UUID!]!): [SkillLevels!]!
  """
  Get for the specific student the students' current knowledge of the given compentencies, including all covered Levels of Blooms Taxonomy .
  ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
  any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
  """
  _internal_noauth_skillLevelForUserBySkillIds(skillIds: [UUID!]!, userId: UUID!): [SkillLevels!]!

}

extend type Mutation {
  """
  ONLY FOR TESTING PURPOSES. DO NOT USE IN FRONTEND. WILL BE REMOVED.

  Triggers the recalculation of the skill level of the user.
  This is done automatically at some time in the night.

  The purpose of this mutation is to allow testing of the skill level score and demonstrate the functionality.
  üîí The user must be a super-user, otherwise an exception is thrown.
  """
  recalculateLevels(chapterId: UUID!, userId: UUID!): SkillLevels! @deprecated(reason: "Only for testing purposes. Will be removed.")
}

"""
The four skill level of a user.
"""
type SkillLevels {
  """
  remember represents how much user remember the concept
  """
  remember: SkillLevel
  """
  understand represents how well the user understands learned content.
  """
  understand: SkillLevel
  """
  apply represents the how well user applies the learned concept during assessment.
  """
  apply: SkillLevel
  """
  apply is how much user can evaluate information and draw conclusions
  """
  analyze: SkillLevel
  """
  evaluate represent how well a user can use the learned content to evaluate
  """
  evaluate:SkillLevel
  """
  create represents how well a user can create new things based on the learned content
  """
  create:SkillLevel
}

"""
The skill level of a user.
"""
type SkillLevel {
  """
  The value of the skill level.
  levels are between 0 and 1.
  """
  value: Float!
  """
  A log of the changes to the skill level
  """
  log: [SkillLevelLogItem!]!
}

"""
An item in the skill level change log.
"""
type SkillLevelLogItem {
  """
  The date when the skill level changed.
  """
  date: DateTime!
  """
  The difference between the previous and the new skill level.
  """
  difference: Float!
  """
  The old skill level.
  """
  oldValue: Float!
  """
  The new skill level.
  """
  newValue: Float!
  """
  The ids of the contents that are associated with the change.
  """
  associatedItemId: UUID!

  """
  the response of the user to the item
  """
  userResponse:Float!
  """
  the probability of a correct response, that M-Elo predicts
  """
  predictedCorrectness:Float!
}